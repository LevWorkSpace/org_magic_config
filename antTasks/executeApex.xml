<project name="ExecuteApex" basedir="." xmlns:ml="org.missinglink.ant.task.http.HttpClientTask">
    
    <!-- Download from https://code.google.com/p/missing-link/ -->
    <taskdef name="http" uri="org.missinglink.ant.task.http.HttpClientTask" classname="org.missinglink.ant.task.http.HttpClientTask" classpath="lib/ml-ant-http-1.1.3/ml-ant-http-1.1.3.jar"/>

    <macrodef name="executeAnonymous" description="Invoke ExecuteAnonymous using Salesforce Tooling API">
        <attribute name="username" description="Salesforce user name."/>
        <attribute name="password" description="Salesforce password."/>
        <attribute name="serverurl" description="Salesforce endpoint."/>
        <text name="apexcode"/>
        <sequential>
            <!-- Login to populate serverUrl / sessionId / instance -->
            <login username="@{username}" password="@{password}" serverurl="@{serverurl}" />

            <!-- Execute using HTTP GET -->
            <ml:http url="${instance}/services/data/v34.0/tooling/executeAnonymous" method="GET" outfile="results/executeAnonymousResult.json"  statusProperty="loginResponseStatus">
                <headers>
                    <header name="Authorization" value="Bearer ${sessionId}"/>
                </headers>
                <query>
                    <parameter name="anonymousBody" value="@{apexcode}"/>
                </query>
            </ml:http>

            <!-- Fail on error -->
            <loadfile property="executeAnonymousResult" srcFile="results/executeAnonymousResult.json" />
            <fail message="Execute Anonymous failed: ${executeAnonymousResult}">
                <condition>
                    <resourcecontains resource="results/executeAnonymousResult.json" substring="&quot;success&quot;:false" />
                </condition>
            </fail>

            <!-- Show output -->
            <echo message="${executeAnonymousResult}" />
            <!--clean up on success-->
            <delete dir="results" />
        </sequential>
    </macrodef>

    <macrodef name="login" description="Login to salesforce and populate serverUrl / sessionId / instance">
        <attribute name="username" description="Salesforce user name."/>
        <attribute name="password" description="Salesforce password."/>    
        <attribute name="serverurl" description="Salesforce endpoint."/>    
        <sequential>
            <!-- Obtain Session Id via Login SOAP service -->
            <ml:http url="@{serverurl}/services/Soap/c/34.0" method="POST" failonunexpected="false" outfile="results/loginResult.xml" statusProperty="loginResponseStatus">
                <headers>
                    <header name="Content-Type" value="text/xml"/>
                    <header name="SOAPAction" value="login"/>
                </headers>
                <entity><![CDATA[
                    <env:Envelope xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:env='http://schemas.xmlsoap.org/soap/envelope/'>
                        <env:Body>
                            <sf:login xmlns:sf='urn:enterprise.soap.sforce.com'>
                                <sf:username>@{username}</sf:username>
                                <sf:password>@{password}</sf:password>
                            </sf:login>
                        </env:Body>
                    </env:Envelope>]]>
                </entity>
            </ml:http>

            <!-- Fail on error -->
            <loadfile property="loginResult" srcFile="results/loginResult.xml" />
            <fail message="Login failed: ${loginResult}">
                <condition>
                    <resourcecontains resource="results/loginResult.xml" substring="faultcode" />
                </condition>
            </fail>

            <!-- Parse response into properties -->
            <xmlproperty file="results/loginResult.xml" />
            <echo file="results/serverUrl.txt" message="${soapenv:Envelope.soapenv:Body.loginResponse.result.serverUrl}" />
            <echo file="results/sessionId.txt" message="${soapenv:Envelope.soapenv:Body.loginResponse.result.sessionId}" />
            <echo file="results/instance.txt" message="${soapenv:Envelope.soapenv:Body.loginResponse.result.serverUrl}" />
            <replaceregexp file="results/instance.txt" match="(https://[^/]+)/.*" replace="\1" />
            <loadfile property="sessionId" srcFile="results/sessionId.txt" />
            <loadfile property="instance" srcFile="results/instance.txt" />
        </sequential>
    </macrodef>
</project>